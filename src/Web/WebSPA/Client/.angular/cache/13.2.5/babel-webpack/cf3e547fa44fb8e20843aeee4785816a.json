{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { catchError, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ItemsService = /*#__PURE__*/(() => {\n  class ItemsService {\n    constructor(http) {\n      this.http = http;\n      this.itemsUrl = `${environment.apiUrl}/items`;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    getItems(page, pageSize, filter) {\n      let categoriesString = \"\";\n      filter.categories.forEach(cc => categoriesString = categoriesString + cc + \"#\");\n      if (categoriesString.length > 0) categoriesString = categoriesString.substring(0, categoriesString.length - 1);\n      let params = new HttpParams().set(\"name\", filter.name).set(\"pageNumber\", page.toString()).set(\"pageSize\", pageSize.toString()).set(\"category\", categoriesString);\n      return this.http.get(this.itemsUrl, {\n        params: params\n      }).pipe(catchError(this.handleError('getItems', {\n        items: [],\n        count: 0\n      })));\n    }\n\n    getItem(id) {\n      const url = `${this.itemsUrl}/${id}`;\n      return this.http.get(url).pipe(catchError(this.handleError(`getItem/${id}`, {\n        id: 0,\n        name: \"\",\n        price: 0,\n        category: \"\",\n        description: \"\"\n      })));\n    }\n\n    handleError(operation = 'operation', result) {\n      return error => {\n        console.error(error);\n        return of(result);\n      };\n    }\n\n  }\n\n  ItemsService.ɵfac = function ItemsService_Factory(t) {\n    return new (t || ItemsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ItemsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemsService,\n    factory: ItemsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ItemsService;\n})();","map":null,"metadata":{},"sourceType":"module"}